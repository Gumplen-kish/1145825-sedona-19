/ *!
* @copyright Copyright (c) 2017 IcoMoon.io
* @license    Лицензия под лицензией MIT
  * См. Https://github.com/Keyamoon/svgxuse
* @version    1.2.6
  * /
( function ( ) { if ( "undefined" ! == typeof  window && window . addEventListener ) { var  e = Object . create ( null ) , l , d = function ( ) { clearTimeout ( l ) ; l = setTimeout ( n , 100 ) } , m = функция () { } , t = function ( ) { window . addEventListener ( "изменить размер" , d , ! 1 ) ; окно . addEventListener ( "orientationchange" , д , ! 1 ) ; if ( window . MutationObserver ) { var  k = new  MutationObserver ( d ) ; к . наблюдать( document . documentElement , { childList :! 0 , поддерево :! 0 , атрибуты :! 0 } ) ; m = function ( ) { try { k . отключить ( ) , окно . removeEventListener ( "изменить размер" , d , ! 1 ) , окно . removeEventListener ( " directionchange ",
d , ! 1 ) } catch ( v ) { } } } другой  документ . documentElement . addEventListener ( "DOMSubtreeModified" , д , ! 1 ) , т = функция ( ) { документ . documentElement . removeEventListener ( "DOMSubtreeModified" , д , ! 1 ) ; окно .removeEventListener ( "изменить размер" , d , ! 1 ) ; окно . removeEventListener ( "orientationchange" , д , ! 1 ) } } , U = функции ( K ) { функция  е ( ) { если ( недействительными 0 ==! . протокол ) вар с = ; иначе с =   документ . createElement ( "a" ) , c . href = a ; возврат  в . протокол . заменить ( /: / g , "" ) + c . host } if ( window . XMLHttpRequest ) { var  d = new  XMLHttpRequest ; var  m = e ( местоположение ) ; к = е (к ) ; d = void  0 ===
д . withCredentials && "" ! == k && k ! == m ? XDomainRequest || void  0 : XMLHttpRequest } return  d } ; var  n = function ( ) { function  d ( ) { - q ; 0 === q && ( m ( ) , t ( ) ) } функция  l (a ) { return  function ( ) { ! 0 ! == e [ a . base ] && ( a . useEl . setAttributeNS ( "http://www.w3.org/1999/xlink" , "xlink: href" , "#" + a . hash ) , a . useEl . hasAttribute ( "href" ) && a . useEl . setAttribute ( "href", "#" + a . hash ) ) } } function  p ( a ) { return  function ( ) { var  c = document . тело , b = документ . createElement ( "x" ) ; а . onload = ноль ; б . innerHTML = a . responseText ; если ( б =б . getElementsByTagName ( "svg" ) [ 0 ] ) b . setAttribute ( "aria-hidden" ,
"правда" ) , б . стиль . позиция = "абсолют" , б . стиль . ширина = 0 , б . стиль . высота = 0 , б . стиль . переполнение = "скрыто" , c . insertBefore ( b , c . firstChild ) ; d ( ) } } функция  n ( a) { return  function ( ) { a . onerror = null ; а . ontimeout = NULL ; d ( ) } } var  a , c , q = 0 ; м ( ) ; var  f = document . getElementsByTagName ( "use" ) ; для ( с = 0 ; с < е, длина ; c + = 1 ) { try { var  g = f [ c ] . getBoundingClientRect ( ) } catch ( w ) { g = ! 1 } var  h = ( a = f [ c ] . GetAttribute ( "href" ) || f [ c ] . GetAttributeNS ("http://www.w3.org/1999/xlink" , "href" ) || f [ c ] . getAttribute ( "xlink: href" ) ) && a . разделить ? а . split ( "#" ) : [ "" , "" ] ; var  b =
h [ 0 ] ; h = h [ 1 ] ; var  r = g && 0 === g . осталось && 0 === g . справа && 0 === g . top && 0 === g . дно ; g && 0 === g . Ширина && 0 === г . высота && ! г ?( Е [ с ] . HasAttribute ( "HREF" ) && е [ с ] . SetAttributeNS ( "http://www.w3.org/1999/xlink" , "XLink: HREF" , ) , б . Длина && ( = е [ Ь ] , ! 0 ==! && SetTimeout ( л ( { useEl : F [ с ] ,base : b , hash : h } ) , 0 ) , void  0 === a && ( h = u ( b ) , void  0 ! == h && ( a = новый  h , e [ b ] = a , a . onload = p ( a ) , a . onerror = n (а ) , а . ontimeout = n ( a ) , a . открыть ( «ПОЛУЧИТЬ» , б ) , а . send ( ) , q + = 1 ) ) ) ) : r ? б . длина && e [ b ] && setTimeout ( l ( { useEl : f [ c ] ,base : b , hash : h } ) , 0 ) : void  0 === e [ b ] ? e [ b ] = ! 0 : е [ б ] . onload && ( e [ b ] . abort ( ) ,
удалить  e [ b ] . onload , e [ b ] = ! 0 ) } f = "" ; q + = 1 ; d ( ) } ; var  p = function ( ) { window . removeEventListener ( "нагрузка" , р , ! 1 ) ; l = setTimeout ( n , 0 )} ; "завершено" ! == документ . готовый штат ? окно . addEventListener ( "нагрузка" , р , ! 1 ) : р ( ) } } ) ( ) ;
